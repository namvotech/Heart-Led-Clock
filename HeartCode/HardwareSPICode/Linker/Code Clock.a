;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.6
;Automatic Program Generator
;© Copyright 1998-2012 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Clock Circuit
;Version : 1.0
;Date    : 12/17/2014
;Author  : NamVo-Monster Electronics
;Company : AVL
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <string.h>
;#include <spi.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;// Standard Input/Output functions
;#include <stdio.h>
;// Declare your global variables here
;#include <declare.c>
;/***********************************
;Declare file
;**********************************/
;/***********************
;spi define
;************************/
;#define CLK_PORT PORTB
;#define DIN_PORT PORTB
;#define LATCH_PORT PORTB
;
;#define CLK_PIN     5
;#define DIN_PIN     3
;#define LATCH_PIN   2
;
;
;typedef unsigned char byte;
;
;#define true    1
;#define false   0
;#define on      1
;#define off      0
;
;#define set_bit(port,pin)   (port)|= (1<<(pin))
;#define clr_bit(port,pin)   (port)&=~(1<<(pin))
;#define falling_edge(port, pin) do {\
;                                set_bit(port,pin);\
;                                delay_ms(2);\
;                                clr_bit(port,pin);\
;                            } while (0)
;
;#define rising_edge(port, pin) do {\
;                                clr_bit(port,pin);\
;                                delay_ms(2);\
;                                set_bit(port,pin);\
;                            } while (0)
;/***************************
;Variable declare
;*******************************/
;//Chuong
;unsigned char flash    character_0[]={0x00,0x04,0x0e,0x0e,0x1f,0x04,0x00,0x00};  //Nen trang
;unsigned char flash    character_1[]={0xff,0xfb,0xf1,0xf1,0xe0,0xfb,0xff,0xff};  //Nen den
;//X
;unsigned char flash    character_2[]={0x00,0x11,0x0a,0x04,0x0a,0x11,0x00,0x00};  //Nen trang
;unsigned char flash    character_3[]={0xff,0xee,0xf5,0xfb,0xf5,0xee,0xff,0xff};  //Nen den
;//< to den
;flash unsigned char character_4[]={0x10,0x18,0x1c,0x1e,0x1c,0x18,0x10,0x00};
;
;
;unsigned char     shift_screen[20],tem_save;
;unsigned char     str_main[]="   Chuc Mung Ngay Ky Niem Cua 2 Chung Ta. Chuc Em Luon Vui Ve Va Am Ap Ben Anh. I LOVE YOU.   ";

	.DSEG
;unsigned int            i,c,j, run;
;int                     str_size;
;int                     lcd_size=16;
;int k;
;bit a;
;#define LED PORTB.1
;
;// Declare your global variables here
;unsigned int row_index, colum_index;
;unsigned int i;
;unsigned char status=0;
;
;
;
;
;#include <bitmap.c>
;//flash unsigned char image[]={
;//
;//0x00,0x00,0x00,0x00,
;//0x00,0x00,0x00,0x00,
;//0x00,0x00,0x00,0x00,
;//0x00,0x00,0x00,0x00,
;//0x00,0x00,0x00,0x00,
;//0x00,0x00,0x00,0x00,
;//0x00,0x00,0x00,0x00,
;//0x00,0x00,0x00,0x00,
;//
;//
;//};
;//#define number_byte 250*4+8
;
;//==========================
;flash unsigned char array_test[]={
;// Chay 1 Led
;0x00,0x00,0x00,0x00,0x00,0x01,
;0x00,0x00,0x00,0x00,0x00,0x03,
;0x00,0x00,0x00,0x00,0x00,0x07,
;0x00,0x00,0x00,0x00,0x00,0x0f,
;0x00,0x00,0x00,0x00,0x00,0x1f,
;0x00,0x00,0x00,0x00,0x00,0x3f,
;0x00,0x00,0x00,0x00,0x00,0x7f,
;0x00,0x00,0x00,0x00,0x00,0xff,
;
;0x00,0x00,0x00,0x00,0x01,0xff,
;0x00,0x00,0x00,0x00,0x03,0xff,
;0x00,0x00,0x00,0x00,0x07,0xff,
;0x00,0x00,0x00,0x00,0x0f,0xff,
;0x00,0x00,0x00,0x00,0x1f,0xff,
;0x00,0x00,0x00,0x00,0x3f,0xff,
;0x00,0x00,0x00,0x00,0x7f,0xff,
;0x00,0x00,0x00,0x00,0xff,0xff,
;
;0x00,0x00,0x00,0x01,0xff,0xff,
;0x00,0x00,0x00,0x03,0xff,0xff,
;0x00,0x00,0x00,0x07,0xff,0xff,
;0x00,0x00,0x00,0x0f,0xff,0xff,
;0x00,0x00,0x00,0x1f,0xff,0xff,
;0x00,0x00,0x00,0x3f,0xff,0xff,
;0x00,0x00,0x00,0x7f,0xff,0xff,
;0x00,0x00,0x00,0xff,0xff,0xff,
;};
;#define number_byte_test 6*24
;
;
;////////////////////////
;#define number_byte 64*21
;flash unsigned char image[]={
;// H
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;
;// E
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;
;// L
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;
;// L
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;
;
;
;// O
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x7F,0xFE,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xE0,0x07,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xE0,0x07,0x00,0x00,
;0x7F,0xFE,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;
;// !
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xF3,0x00,0x00,
;0xFF,0xF3,0x00,0x00,
;0xFF,0xF3,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// _
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// I
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;
;// _
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;// L
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;
;// O
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x7F,0xFE,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xE0,0x07,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xE0,0x07,0x00,0x00,
;0x7F,0xFE,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;
;
;
;// V
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xE0,0x00,0x00,
;0xFF,0xF0,0x00,0x00,
;0xFF,0xF8,0x00,0x00,
;0x00,0x1C,0x00,0x00,
;0x00,0x0E,0x00,0x00,
;0x00,0x07,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x06,0x00,0x00,
;0x00,0x0C,0x00,0x00,
;0x00,0x18,0x00,0x00,
;0xFF,0xF0,0x00,0x00,
;0xFF,0xE0,0x00,0x00,
;
;// E
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;0xC1,0x83,0x00,0x00,
;
;
;// _
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;// Y
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFE,0x00,0x00,0x00,
;0xFF,0x00,0x00,0x00,
;0xFF,0x80,0x00,0x00,
;0x01,0xC0,0x00,0x00,
;0x00,0xE0,0x00,0x00,
;0x00,0x7F,0x00,0x00,
;0x00,0x3F,0x00,0x00,
;0x00,0x3F,0x00,0x00,
;0x00,0x60,0x00,0x00,
;0x00,0xC0,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0xFF,0x00,0x00,0x00,
;0xFE,0x00,0x00,0x00,
;
;
;// O
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x7F,0xFE,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xE0,0x07,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xE0,0x07,0x00,0x00,
;0x7F,0xFE,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;
;// U
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFC,0x00,0x00,
;0xFF,0xFE,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0x00,0x07,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x03,0x00,0x00,
;0x00,0x07,0x00,0x00,
;0xFF,0xFE,0x00,0x00,
;0xFF,0xFC,0x00,0x00,
;
;
;// _
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;};
;
;///////////////////
;#define number_byte_tt 64*21
;flash unsigned char image_tt[]={
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;
;// trai tim rong
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x60,0xC0,0x00,0x00,
;0x40,0x60,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x18,0x00,0x00,
;0x30,0x0C,0x00,0x00,
;0x18,0x06,0x00,0x00,
;0x18,0x03,0x00,0x00,
;0x30,0x06,0x00,0x00,
;0x60,0x0C,0x00,0x00,
;0x40,0x18,0x00,0x00,
;0x40,0x30,0x00,0x00,
;0x60,0x60,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// trai tim dac
;0x1F,0x00,0x00,0x00,
;0x3F,0x80,0x00,0x00,
;0x7F,0xC0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x1F,0xFE,0x00,0x00,
;0x1F,0xFF,0x00,0x00,
;0x3F,0xFE,0x00,0x00,
;0x7F,0xFC,0x00,0x00,
;0x7F,0xF8,0x00,0x00,
;0x7F,0xF0,0x00,0x00,
;0x7F,0xE0,0x00,0x00,
;0x3F,0xC0,0x00,0x00,
;0x1F,0x80,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;};
;
;////////////////////////////////////
;flash unsigned char image_avl[]={
;// G
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x3F,0xFC,0x00,0x00,
;0x7F,0xFE,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xE0,0x07,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x03,0x00,0x00,
;0xC0,0x63,0x00,0x00,
;0xC0,0x63,0x00,0x00,
;0xC0,0x73,0x00,0x00,
;0xC0,0x7F,0x00,0x00,
;0x60,0x7E,0x00,0x00,
;0x20,0x3C,0x00,0x00,
;
;// o
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x03,0xFC,0x00,0x00,
;0x07,0xFE,0x00,0x00,
;0x0F,0xFF,0x00,0x00,
;0x0C,0x03,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x04,0x02,0x00,0x00,
;0x03,0xFC,0x00,0x00,
;
;// o
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x03,0xFC,0x00,0x00,
;0x07,0xFE,0x00,0x00,
;0x0F,0xFF,0x00,0x00,
;0x0C,0x03,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x04,0x02,0x00,0x00,
;0x03,0xFC,0x00,0x00,
;
;// d
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x03,0xFC,0x00,0x00,
;0x07,0xFE,0x00,0x00,
;0x0F,0xFF,0x00,0x00,
;0x0C,0x03,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x0C,0x03,0x00,0x00,
;0x0F,0xFF,0x00,0x00,
;0xFF,0xFE,0x00,0x00,
;0xFF,0xFC,0x00,0x00,
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// N
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0x30,0x00,0x00,0x00,
;0x18,0x00,0x00,0x00,
;0x0C,0x00,0x00,0x00,
;0x06,0x00,0x00,0x00,
;0x03,0x00,0x00,0x00,
;0x01,0x80,0x00,0x00,
;0x00,0xC0,0x00,0x00,
;0x00,0x60,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;
;
;// i
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x04,0x00,0x00,
;0x00,0x08,0x00,0x00,
;0x00,0x10,0x00,0x00,
;0x00,0x20,0x00,0x00,
;0xCF,0xFF,0x00,0x00,
;0xCF,0xFF,0x00,0x00,
;0x00,0x01,0x00,0x00,
;0x00,0x02,0x00,0x00,
;0x00,0x04,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;// g
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x03,0xFC,0x00,0xC0,
;0x07,0xFE,0x01,0x20,
;0x0F,0xFF,0x01,0x10,
;0x0C,0x03,0x02,0x10,
;0x08,0x01,0x02,0x30,
;0x08,0x01,0x04,0x60,
;0x08,0x01,0x04,0xC0,
;0x08,0x01,0x09,0x80,
;0x08,0x01,0x0B,0x00,
;0x0C,0x03,0x96,0x00,
;0x0F,0xFF,0xFC,0x00,
;0x07,0xFF,0xF8,0x00,
;0x03,0xFF,0xF0,0x00,
;
;// h
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x04,0x00,0x00,
;0x00,0x08,0x00,0x00,
;0x00,0x10,0x00,0x00,
;0x00,0x20,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xC1,0x10,0x00,0x00,
;0x82,0x20,0x00,0x00,
;0x44,0x40,0x00,0x00,
;0x38,0x40,0x00,0x00,
;0x00,0x60,0x00,0x00,
;0x00,0x7F,0x00,0x00,
;0x00,0x3F,0x00,0x00,
;
;// t
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x08,0x04,0x00,0x00,
;0x08,0x08,0x00,0x00,
;0x08,0x10,0x00,0x00,
;0x08,0x20,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0xFF,0xFF,0x00,0x00,
;0x08,0x01,0x00,0x00,
;0x08,0x02,0x00,0x00,
;0x08,0x04,0x00,0x00,
;0x08,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;
;
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,
;};
;#define number_byte_avl 64*10
;
;
;
;
;
;
;
;
;
;#include <sub_program.c>
;
;
;void test(void)
; 0000 0023 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;
;//    for (row_index=0; row_index < number_byte_test; row_index+=6)
;//    {
;//        for (colum_index = 0;colum_index<6;colum_index++)
;//        {
;//            SPDR=spi(array_test[row_index + colum_index]);
;//        }
;//        falling_edge(LATCH_PORT, LATCH_PIN);
;//        delay_ms(200);
;//    }
;
;
;        for (colum_index = 0;colum_index<8;colum_index++)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;        {
;            SPDR=spi(0xff);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;            while(!(SPSR & (1<<SPIF)));
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;        }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;        falling_edge(LATCH_PORT, LATCH_PIN);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;        delay_ms(500);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;
;        for (colum_index = 0;colum_index<8;colum_index++)
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;        {
;            SPDR=spi(0x00);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;            while(!(SPSR & (1<<SPIF)));
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;        }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;        falling_edge(LATCH_PORT, LATCH_PIN);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;        delay_ms(500);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;}
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;//=================================
;void lcd_string_shift(unsigned char row,)
;{
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;    int  shift;
;    if(j>=25)
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;	row -> Y+2
;	shift -> R16,R17
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;    {
;      tem_save=str_main[0];
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;      for(shift=0;shift<=(str_size-2);shift++)
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;      {
;        if(shift<=lcd_size-1)
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;        {
;            shift_screen[shift]=str_main[shift];
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;            lcd_gotoxy(shift,row);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;            lcd_putchar(shift_screen[shift]);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;        }
;        str_main[shift]= str_main[shift+1];
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;      }
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;      str_main[str_size-1]=tem_save;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;      j=0;
;PCODE: $0000009A VOL: 0
;    }
;}
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;
;/*********************************
;//Subroutine recording CGRAM character on the LCD
;// function used to define user characters
;*************************************/
;void define_char(flash unsigned char *pc,unsigned char char_code)
;{
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;char i,address;
;address=(char_code<<3)|0x40;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;	*pc -> Y+3
;	char_code -> Y+2
;	i -> R17
;	address -> R16
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;for (i=0; i<8; i++) lcd_write_byte(address++,*pc++);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;
;#include <sub_interrupt.c>
;/***********************************
;Timer 0 oveflow interrupt
;Check keypad
;**********************************/
;/***********************************
;Timer 2 oveflow interrupt
;**********************************/
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 0024 {
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;    // Place your code here
;    i++;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;    c++;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;    j++;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;    run++;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;
;}
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;
;void main(void)
; 0000 0027 {
;PCODE: $000000D3 VOL: 0
; 0000 0028 
; 0000 0029 // Declare your local variables here
; 0000 002A 
; 0000 002B // Input/Output Ports initialization
; 0000 002C // Port B initialization
; 0000 002D PORTB=0x00;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 002E DDRB=0xef;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 002F 
; 0000 0030 // Port C initialization
; 0000 0031 PORTC=0x00;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0032 DDRC=0xff;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0033 
; 0000 0034 // Port D initialization
; 0000 0035 PORTD=0x00;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0036 DDRD=0xff;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0037 
; 0000 0038 // Timer/Counter 0 initialization
; 0000 0039 // Clock source: System Clock
; 0000 003A // Clock value: Timer 0 Stopped
; 0000 003B //TCCR0|=(1<<CS01);
; 0000 003C //TCNT0=0x00;
; 0000 003D 
; 0000 003E // Timer/Counter 1 initialization
; 0000 003F // Clock source: System Clock
; 0000 0040 // Clock value: 250.000 kHz
; 0000 0041 // Mode: Fast PWM top=ICR1
; 0000 0042 // OC1A output: Toggle
; 0000 0043 // OC1B output: Toggle
; 0000 0044 // Noise Canceler: Off
; 0000 0045 // Input Capture on Falling Edge
; 0000 0046 // Timer1 Overflow Interrupt: Off
; 0000 0047 // Input Capture Interrupt: Off
; 0000 0048 // Compare A Match Interrupt: Off
; 0000 0049 // Compare B Match Interrupt: Off
; 0000 004A //TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);
; 0000 004B //TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10);
; 0000 004C TCCR1A=0x00;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 004D TCCR1B=0x00;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 004E TCNT1H=0x00;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 004F TCNT1L=0x00;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0050 ICR1=20000;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0051 OCR1A=2000;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0052 OCR1B=2000;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0053 
; 0000 0054 // Timer/Counter 2 initialization
; 0000 0055 // Clock source: System Clock
; 0000 0056 // Clock value: Timer2 Stopped
; 0000 0057 // Mode: Normal top=0xFF
; 0000 0058 // OC2 output: Disconnected
; 0000 0059 
; 0000 005A ASSR=0x00;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 005B TCCR2|=(1<<CS21)|(1<<CS20);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 005C TCNT2=0x00;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 005D OCR2=0x00;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 005E 
; 0000 005F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0060 TIMSK|=(1<<TOIE0)|(1<<TOIE2);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0061 
; 0000 0062 // ADC initialization
; 0000 0063 // ADC disabled
; 0000 0064 ADCSRA=0x00;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0065 
; 0000 0066 // TWI initialization
; 0000 0067 // TWI disabled
; 0000 0068 TWCR=0x00;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0069 
; 0000 006A //SPI
; 0000 006B SPCR |= ((1<<SPE) | (1<<MSTR) | (0<<DORD) | (1<<CPOL) | (1<<CPHA)| (1<<SPR1)|(1<<SPR0));
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 006C // Set SPI clock rate to FCPU/2.
; 0000 006D SPSR |= (1<<SPI2X);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 006E 
; 0000 006F lcd_clear();
;PCODE: $00000103 VOL: 0
; 0000 0070 lcd_init(16);
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0071 lcd_gotoxy(0,1);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0072 lcd_puts("Hello");
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0073 
; 0000 0074 //Subroutine call recording CGRAM character on the LCD
; 0000 0075 define_char(character_0,0x00);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0076 define_char(character_1,0x01);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0077 define_char(character_2,0x02);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 0078 define_char(character_3,0x03);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0079 define_char(character_4,0x04);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 007A //define_char(character_5,0x05);
; 0000 007B 
; 0000 007C str_size = strlen(str_main);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 007D #asm("sei")
;PCODE: $00000124 VOL: 0
	sei
;PCODE: $00000125 VOL: 0
; 0000 007E 
; 0000 007F while (1)
;PCODE: $00000126 VOL: 0
; 0000 0080 {
; 0000 0081       /********************************
; 0000 0082       Display program String Shift
; 0000 0083       *****************************/
; 0000 0084 //      if(run>=100)
; 0000 0085 //      {
; 0000 0086 //        lcd_string_shift(0);
; 0000 0087 //        run=0;
; 0000 0088 //        a=~a;
; 0000 0089 //      }
; 0000 008A //      LED=a?1:0;
; 0000 008B //      delay_ms(250);
; 0000 008C 
; 0000 008D       test();
;PCODE: $00000127 VOL: 0
; 0000 008E       //delay_ms(3000);
; 0000 008F 
; 0000 0090 }
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 0091 }
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0

	.DSEG
_0x1F:
	.BYTE 0x6
